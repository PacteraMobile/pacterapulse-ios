<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/PPLNetworkingHelper.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/PPLNetworkingHelper</TokenIdentifier>
			<Abstract type="html">PPLNetworkingHelper provides generic functions for network communications</Abstract>
			<DeclaredIn>PPLNetworkingHelper.h</DeclaredIn>
            
			
			<NodeRef refid="4"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PPLNetworkingHelper/sharedClient</TokenIdentifier>
			<Abstract type="html">Singleton class</Abstract>
			<DeclaredIn>PPLNetworkingHelper.h</DeclaredIn>
			
			<Declaration>+ (PPLNetworkingHelper *)sharedClient</Declaration>
			
			<ReturnValue><Abstract type="html">returns the singleton instance for PPLNetworkingHelper</Abstract></ReturnValue>
			<Anchor>//api/name/sharedClient</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPLNetworkingHelper/GET:parameters:success:failure:</TokenIdentifier>
			<Abstract type="html">Function to do GET HTTP request</Abstract>
			<DeclaredIn>PPLNetworkingHelper.h</DeclaredIn>
			
			<Declaration>- (AFHTTPRequestOperation *)GET:(NSString *)relativeURL parameters:(NSDictionary *)parameters success:(void ( ^ ) ( NSString *responseString , id responseObject ))success failure:(void ( ^ ) ( NSString *responseString , NSError *error ))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>relativeURL</Name>
					<Abstract type="html">URL which is relative to the base URL</Abstract>
				</Parameter><Parameter>
					<Name>parameters</Name>
					<Abstract type="html">Parameters to pass to the server for URL call</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">callback function to be called incase of a successfull
HTTP Request</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">callback function to be called if the HTTP request fails
for any reason</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">return the created Request operation</Abstract></ReturnValue>
			<Anchor>//api/name/GET:parameters:success:failure:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPLNetworkingHelper/POST:parameters:success:failure:</TokenIdentifier>
			<Abstract type="html">Function to do Post HTTP request</Abstract>
			<DeclaredIn>PPLNetworkingHelper.h</DeclaredIn>
			
			<Declaration>- (AFHTTPRequestOperation *)POST:(NSString *)relativeURL parameters:(NSDictionary *)parameters success:(void ( ^ ) ( NSString *responseString , id responseObject ))success failure:(void ( ^ ) ( NSString *responseString , NSError *error ))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>relativeURL</Name>
					<Abstract type="html">URL relative to the base URL</Abstract>
				</Parameter><Parameter>
					<Name>parameters</Name>
					<Abstract type="html">Parameters to pass to the POST request</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">callback function to be called is the HTTP Request is
successful</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">callback function to be called if the HTTP Request fails</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">returns the created HTTP Request operation</Abstract></ReturnValue>
			<Anchor>//api/name/POST:parameters:success:failure:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PPLNetworkingHelper/initialize</TokenIdentifier>
			<Abstract type="html">Clas level initialized function</Abstract>
			<DeclaredIn>PPLNetworkingHelper.m</DeclaredIn>
			
			<Declaration>+ (void)initialize</Declaration>
			
			
			<Anchor>//api/name/initialize</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPLNetworkingHelper/init</TokenIdentifier>
			<Abstract type="html">Instance level initialization woud create and initialize httpManager based
on the base URL</Abstract>
			<DeclaredIn>PPLNetworkingHelper.m</DeclaredIn>
			
			<Declaration>- (id)init</Declaration>
			
			<ReturnValue><Abstract type="html">returns the class instance</Abstract></ReturnValue>
			<Anchor>//api/name/init</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPLNetworkingHelper/setHttpManager:</TokenIdentifier>
			<Abstract type="html">httpManager will be used for HTTP Communincations will be initialized once
with base url</Abstract>
			<DeclaredIn>PPLNetworkingHelper.m</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AFHTTPRequestOperationManager *httpManager</Declaration>
			
			
			<Anchor>//api/name/httpManager</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPLNetworkingHelper/httpManager</TokenIdentifier>
			<Abstract type="html">httpManager will be used for HTTP Communincations will be initialized once
with base url</Abstract>
			<DeclaredIn>PPLNetworkingHelper.m</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AFHTTPRequestOperationManager *httpManager</Declaration>
			
			
			<Anchor>//api/name/httpManager</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PPLNetworkingHelper/httpManager</TokenIdentifier>
			<Abstract type="html">httpManager will be used for HTTP Communincations will be initialized once
with base url</Abstract>
			<DeclaredIn>PPLNetworkingHelper.m</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AFHTTPRequestOperationManager *httpManager</Declaration>
			
			
			<Anchor>//api/name/httpManager</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
        
        
	</File>
</Tokens>